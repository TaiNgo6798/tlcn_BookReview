{"version":3,"sources":["components/nav/index.js","components/post/index.js","components/suggestBooks/index.js","components/infor/index.js","components/firstRegister/index.js","components/leftBar/index.js","actions/posts/setPost.js","firebase/my-firebase.js","components/createPost/index.js","components/utils/hoc/authUser/index.js","actions/posts/loadMore.js","pages/newsFeed/index.js"],"names":["Search","Index","useState","messageCount","setMessageCount","heightChange","useEffect","setInterval","window","addEventListener","scrollY","document","querySelector","classList","add","remove","className","placeholder","onSearch","value","console","log","style","width","count","type","TextArea","props","comments","user","likeCount","img","content","postTime","postDay2","Date","avatar","username","commentText","setCommentText","showComment","setShowComment","showAllComment","setShowAllComment","botText","setBotText","commentData","setCommentData","size","src","title","moment","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","fromNow","fontSize","onClick","margin","map","v","k","likes","disLikes","action","actions","key","theme","data","comment","splice","like","paddingLeft","cursor","dislike","author","alt","datetime","format","length","autoSize","border","onChange","e","target","onChangeCommentHandler","newComment","push","postCommentHandler","initLoading","setInitLoading","loading","setLoading","setData","list","setList","fakeDataUrl","getData","res","results","callback","reqwest","url","method","contentType","success","loadMore","textAlign","marginTop","height","lineHeight","marginBottom","concat","Array","name","dataNew","itemLayout","dataSource","renderItem","item","Item","active","Meta","href","last","description","firstName","float","paddingRight","WrappedNormalForm","create","getFieldDecorator","form","visible","onCancel","spinning","footer","rules","required","message","block","preventDefault","validateFields","err","values","lastName","gender","phone","axios","secondName","then","settingHandler","SubMenu","defaultSelectedKeys","defaultOpenKeys","mode","setPost","payload","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","dateNow","now","postNew","removeNewPost","database","ref","child","on","snapshot","val","obj","uploadStorage","file","a","result","dataStr","getTime","fileCompleteName","storageRef","storage","reviewStorageRef","put","nameImage","getDownloadURL","isLoading","setIsLoading","imageUrl","setImageUrl","setUrl","setNameImage","setTitle","kind","setKind","desc","setDesc","posting","setPosting","dispatch","useDispatch","postEditor","closeBtn","body","activeElement","blur","setTimeout","handleChange","info","status","originFileObj","getBase64","reader","FileReader","readAsDataURL","uploadButton","tip","marginRight","minRows","maxRows","borderColor","listType","showUploadList","beforeUpload","isJpgOrPng","error","isLt2M","color","display","click","withAuth","WrappedComponent","state","setState","this","currentUser","Component","visibleFirstTime","setVisibleFirstTime","postList","setPostList","posts","useSelector","postReducer","useBottomScrollListener","lastPost","Object","numberTime","unshift","postUser","urlImage","time"],"mappings":"gNAMQA,G,WAAAA,QAwDOC,MAtDf,WAAkB,IAAD,EAE2BC,mBAAS,GAFpC,mBAEPC,EAFO,KAEOC,EAFP,KAGXC,GAAe,EAwBnB,OAlBAC,qBAAU,WAJRC,aAAY,WACVH,GAAgB,SAAAD,GAAY,OAAIA,EAAe,OAC9C,KAKHK,OAAOC,iBAAiB,UAAU,WAC3BD,OAAOE,SAAW,KAAuB,IAAjBL,IAEzBG,OAAOG,SAASC,cAAc,QAAQC,UAAUC,IAAI,YACpDN,OAAOG,SAASC,cAAc,cAAcC,UAAUC,IAAI,YAC1DT,GAAe,GAEdG,OAAOE,SAAW,KAAuB,IAAjBL,IACzBG,OAAOG,SAASC,cAAc,QAAQC,UAAUE,OAAO,YACvDP,OAAOG,SAASC,cAAc,cAAcC,UAAUE,OAAO,YAC7DV,GAAe,QAGpB,IAGD,yBAAKW,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SACf,yBAAKA,UAAU,aACb,kBAAChB,EAAD,CACEiB,YAAY,oBACZC,SAAU,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,IAC/BG,MAAO,CAAEC,MAAO,QAGpB,yBAAKP,UAAU,UACb,uBAAOQ,MAAO,GACd,uBAAMC,KAAK,mBAAmBT,UAAU,UAExC,uBAAOQ,MAAOrB,GACd,uBAAMsB,KAAK,OAAQT,UAAU,UAE7B,uBAAOQ,MAAO,GACd,uBAAMC,KAAK,OAAOT,UAAU,c,yGC/C9BU,G,WAAAA,UA0MOzB,EAxMD,SAAC0B,GAAW,IAElBC,EAAsDD,EAAtDC,SAAUC,EAA4CF,EAA5CE,KAAMC,EAAsCH,EAAtCG,UAAWC,EAA2BJ,EAA3BI,IAAKC,EAAsBL,EAAtBK,QAASC,EAAaN,EAAbM,SAC3CC,EAAW,IAAIC,KAAKF,GAClBG,EAAqBP,EAArBO,OAAQC,EAAaR,EAAbQ,SAJS,EAKenC,mBAAS,IALxB,mBAKhBoC,EALgB,KAKHC,EALG,OAMerC,oBAAS,GANxB,mBAMhBsC,EANgB,KAMHC,EANG,OAOqBvC,oBAAS,GAP9B,mBAOhBwC,EAPgB,KAOAC,EAPA,OAQOzC,oBAAS,GARhB,mBAQhB0C,EARgB,KAQPC,EARO,OASe3C,mBAAS0B,GAAsB,IAT9C,mBAShBkB,EATgB,KASHC,EATG,KA8GvB,OACE,oCACE,yBAAK/B,UAAU,YACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,UACb,uBAAQgC,KAAM,GAAIC,IAAKb,KAEzB,yBAAKpB,UAAU,YACb,2BAAI,2BAAIqB,IACR,yBAAKrB,UAAU,QACX,uBAAGkC,MAAOjB,GACVkB,IAAO,CAACjB,EAASkB,cAAelB,EAASmB,WAAYnB,EAASoB,UAAWpB,EAASqB,WAAYrB,EAASsB,aAActB,EAASuB,aAAcvB,EAASwB,oBACpJC,cAMT,yBAAK3C,UAAU,QACb,yBAAKiC,IAAKlB,KAEZ,yBAAKf,UAAU,SACb,uBAAMM,MAAO,CAAEsC,SAAU,QAAUnC,KAAK,SACxC,uBAAMH,MAAO,CAAEsC,SAAU,QAAUnC,KAAK,UACxC,uBAAMH,MAAO,CAAEsC,SAAU,QAAUnC,KAAK,UAAUoC,QAAS,WAAQpB,GAAgBD,MACnF,uBAAMlB,MAAO,CAAEsC,SAAU,QAAUnC,KAAK,UAG1C,yBAAKT,UAAU,aACZc,EADH,4BAIA,yBAAKd,UAAU,eACb,uBAAGM,MAAO,CAACwC,OAAQ,cAAezB,GAClC,2BAAIL,IAIHQ,GACC,yBAAKxB,UAAU,YAEV0B,GA7FXI,EAAYiB,KAAI,SAACC,EAAGC,GAAO,IACnBC,EAA4BF,EAA5BE,MAAOC,EAAqBH,EAArBG,SAAUC,EAAWJ,EAAXI,OACjBC,EAAU,CACd,0BAAMC,IAAI,sBACR,uBAASpB,MAAM,QACb,uBACEzB,KAAK,OACL8C,MAAkB,UAAXH,EAAqB,SAAW,WACvCP,QAAS,kBAlCR,SAACI,GACZ,IAAIO,EAAI,YAAO1B,GACX2B,EAAUD,EAAKP,GACnBQ,EAAQP,MAAQ,EAChBO,EAAQN,SAAW,EACnBM,EAAQL,OAAS,QAGjBI,EAAKE,OAAOT,EAAG,EAAGQ,GAClB1B,EAAeyB,GAyBUG,CAAKV,OAGxB,0BAAM3C,MAAO,CAAEsD,YAAa,EAAGC,OAAQ,SAAWX,IAEpD,0BAAMI,IAAI,gCACR,uBAASpB,MAAM,WACb,uBACEzB,KAAK,UACL8C,MAAkB,aAAXH,EAAwB,SAAW,WAC1CP,QAAS,YAhCL,SAACI,GAEf,IAAIO,EAAI,YAAO1B,GACX2B,EAAUD,EAAKP,GACnBQ,EAAQP,MAAQ,EAChBO,EAAQN,SAAW,EACnBM,EAAQL,OAAS,WAGjBI,EAAKE,OAAOT,EAAG,EAAGQ,GAClB1B,EAAeyB,GAsBYM,CAAQb,OAG7B,0BAAM3C,MAAO,CAAEsD,YAAa,EAAGC,OAAQ,SAAWV,IAEpD,0BAAMG,IAAI,0BAAV,aAEF,OACE,uBACEA,IAAKL,EACLI,QAASA,EACTU,OAAQf,EAAEe,OACV3C,OACE,uBACEa,IAAI,mEACJ+B,IAAI,aAGRhD,QACE,2BACGgC,EAAES,SAGPQ,SACE,uBAAS/B,MAAOC,MAAS+B,OAAO,wBAC9B,8BAAO/B,MAASQ,kBAuDdjB,GAAkBI,EAAYqC,OAAS,GAEvC,uBAEEJ,OAAQ,2BAAIjC,EAAY,GAAGiC,QAC3B3C,OACE,uBACEa,IAAI,mEACJ+B,IAAI,aAGRhD,QACE,2BACGc,EAAY,GAAG2B,SAGpBQ,SACE,uBAAS/B,MAAOC,MAAS+B,OAAO,wBAC9B,8BAAO/B,MAASQ,cAM1B,yBAAK3C,UAAU,UACb,uBAAG6C,QAAS,WACVlB,GAAmBD,GACnBG,GAAYD,MAEC,IAAZA,EAAmB,mBAAqB,sBAMnD,yBAAK5B,UAAU,eACb,kBAACU,EAAD,CAAUP,MAAOmB,EAAarB,YAAY,wBAAwBmE,UAAQ,EAAE9D,MAAO,CAAC+D,OAAQ,QAASC,SAAU,SAACC,IArLvF,SAACA,GAC9BhD,EAAegD,EAAEC,OAAOrE,OAoLmGsE,CAAuBF,MAC9I,uBAAQ1B,QAAS,kBAlLI,WACzB,IAAI6B,EAAa,CACfX,OAAQ,eACRN,QAASnC,EACT8B,OAAQ,KACRF,MAAO,IACPC,SAAU,KAEZrB,EAAY6C,KAAKD,GACjB3C,EAAe,YAAID,IACnBP,EAAe,IACfE,GAAe,GACfE,GAAkB,GAClBE,GAAW,GAqKgB+C,KAAvB,sB,sDC9GK3F,G,OAnFD,WACZ,IADkB,EAEoBC,oBAAS,GAF7B,mBAEX2F,EAFW,KAEEC,EAFF,OAGY5F,oBAAS,GAHrB,mBAGX6F,EAHW,KAGFC,EAHE,OAIM9F,mBAAS,IAJf,mBAIXsE,EAJW,KAILyB,EAJK,OAKM/F,mBAAS,IALf,mBAKXgG,EALW,KAKLC,EALK,KAMZC,EAAW,6CALH,EAKG,qCAEjB9F,qBAAU,WAER+F,GAAQ,SAAAC,GACNR,GAAe,GACfG,EAAQK,EAAIC,SACZJ,EAAQG,EAAIC,cAGb,IAEH,IAAMF,EAAU,SAAAG,GACdC,IAAQ,CACNC,IAAKN,EACL3E,KAAM,OACNkF,OAAQ,MACRC,YAAa,mBACbC,QAAS,SAAAP,GACPE,EAASF,OAiBTQ,EACHjB,GAAgBE,EAYb,KAXF,yBACEzE,MAAO,CACLyF,UAAW,SACXC,UAAW,GACXC,OAAQ,GACRC,WAAY,OACZC,aAAc,SAGhB,uBAAQtD,QAvBK,WACjBmC,GAAW,GACXG,EAAQ3B,EAAK4C,OAAO,YAAI,IAAIC,MA/BhB,IA+B8BtD,KAAI,iBAAO,CAAEgC,SAAS,EAAMuB,KAAM,SAE5EjB,GAAQ,SAAAC,GACN,IAAMiB,EAAU/C,EAAK4C,OAAOd,EAAIC,SAChCN,EAAQsB,GACRpB,EAAQoB,GACRvB,GAAW,QAeT,iBAIN,OACE,oCACJ,uBACQhF,UAAU,qBACV+E,QAASF,EACT2B,WAAW,aACXV,SAAUA,EACVW,WAAYvB,EACZwB,WAAY,SAAAC,GAAI,OACd,sBAAMC,KAAN,KACE,uBAAUxF,QAAM,EAACc,OAAO,EAAO6C,QAAS4B,EAAK5B,QAAS8B,QAAM,GAC1D,sBAAMD,KAAKE,KAAX,CACE1F,OACE,uBAAQa,IAAI,qEAEdC,MAAO,uBAAG6E,KAAK,sBAAsBJ,EAAKL,KAAKU,MAC/CC,YAAY,uBCxCbhI,G,OAjCD,SAAC0B,GAAW,IAEhBE,EAASF,EAATE,KAER,OACE,oCACE,yBAAKb,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,UACb,uBAAQgC,KAAM,GAAKC,IAAKpB,GAAOA,EAAKO,OAASP,EAAKO,OAAc,MAElE,yBAAKpB,UAAU,YACb,4BAAI,2BAAIa,GAAOA,EAAKqG,UAAYrG,EAAKqG,UAAiB,OAG1D,yBAAKlH,UAAU,gBACb,yBAAKA,UAAU,OAAf,qCAEI,uBAAGM,MAAO,CAAC6G,MAAO,QAASC,aAAc,SAAzC,yBAEJ,yBAAKpH,UAAU,aACb,kBAAC,EAAD,QAGJ,yBAAKA,UAAU,UACX,8EACA,uD,mECuFGqH,G,OADW,IAAKC,OAAO,CAAEhB,KAAM,QAApB,EAnHZ,SAAC3F,GAAW,IAEhB4G,EAAsB5G,EAAM6G,KAA5BD,kBAEAE,EAAsB9G,EAAtB8G,QAASC,EAAa/G,EAAb+G,SAJM,EAOOxI,oBAAS,GAPhB,mBAOhB6F,EAPgB,KAOPC,EAPO,KAiCvB,OACE,oCACE,uBAAM2C,SAAU5C,GACd,uBACE0C,QAASA,EACTC,SAAU,WAAQA,KAClBE,OAAQ,KACRrH,MAAM,QACNP,UAAU,qBAEV,yBAAKA,UAAU,SAAf,sCACA,yBAAKA,UAAU,WAGf,yBAAKA,UAAU,WAGf,2BACE,sBAAM4G,KAAN,KACGW,EAAkB,YAAa,CAC9BM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,wDAF9BR,CAIE,uBACDtH,YAAY,aAEZ+B,KAAK,YAGT,sBAAM4E,KAAN,KACGW,EAAkB,WAAY,CAC7BM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,wDAF9BR,CAIE,uBACDtH,YAAY,YAEZ+B,KAAK,YAGT,sBAAM4E,KAAN,KACGW,EAAkB,SAAU,CAC3BM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,wDAF9BR,CAIE,uBACDtH,YAAY,SAEZ+B,KAAK,YAGT,sBAAM4E,KAAN,KACGW,EAAkB,QAAS,CAC1BM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,wDAF9BR,CAIE,uBACDtH,YAAY,QAEZ+B,KAAK,YAIT,sBAAM4E,KAAN,KACE,uBACEN,KAAK,mBACL7F,KAAK,UACLuB,KAAK,QACLgG,OAAK,EACLhI,UAAU,YACV6C,QAAS,SAAC0B,GAAD,OA9FA,SAACA,GACtBA,EAAE0D,iBACFtH,EAAM6G,KAAKU,gBAAe,SAACC,EAAKC,GAC9B,IAAKD,EAAK,CAAC,IACDjB,EAAuCkB,EAAvClB,UAAWmB,EAA4BD,EAA5BC,SAAUC,EAAkBF,EAAlBE,OAAQC,EAAUH,EAAVG,MACrCvD,GAAW,GACXwD,IAAM,CACJ7C,OAAQ,OACRD,IAAK,2CACLlC,KAAM,CACJ0D,YACAuB,WAAYJ,EACZC,SACAC,WAEDG,MAAK,WACN1D,GAAW,GACX0C,WA6EsBiB,CAAepE,KANjC,iB,kBCOCtF,G,OArGD,WAAO,IACX2J,EADU,IACVA,QAGR,OAAO,oCACL,yBAAK5I,UAAU,OACb,uBACEM,MAAO,CAAEC,MAAO,KAChBsI,oBAAqB,CAAC,KACtBC,gBAAiB,CAAC,QAClBC,KAAM,WACNxF,MAAO,SAEP,kBAACqF,EAAD,CAEE1G,MACE,8BACE,uBAAMzB,KAAK,SACX,gEAKJ,sBAAMmG,KAAN,yBACA,sBAAMA,KAAN,iCACA,sBAAMA,KAAN,+BACA,sBAAMA,KAAN,kCACA,sBAAMA,KAAN,6BACA,sBAAMA,KAAN,mCAOF,kBAACgC,EAAD,CAEE1G,MACE,8BACE,uBAAMzB,KAAK,SACX,mEAIJ,sBAAMmG,KAAN,oBACA,sBAAMA,KAAN,oBACA,sBAAMA,KAAN,yBACA,sBAAMA,KAAN,6BACA,sBAAMA,KAAN,6BACA,sBAAMA,KAAN,kBACA,sBAAMA,KAAN,8BAGF,kBAACgC,EAAD,CAEE1G,MACE,8BACE,uBAAMzB,KAAK,SACX,yEAIJ,sBAAMmG,KAAN,gEACA,sBAAMA,KAAN,wCACA,sBAAMA,KAAN,gDACA,sBAAMA,KAAN,6CACA,sBAAMA,KAAN,kBACA,sBAAMA,KAAN,2BAIF,kBAACgC,EAAD,CAEE1G,MACE,8BACE,uBAAMzB,KAAK,aACX,8DAIH,sBAAMmG,KAAN,qBACD,sBAAMA,KAAN,+BACA,sBAAMA,KAAN,mBACA,sBAAMA,KAAN,mBACA,sBAAMA,KAAN,yBACA,sBAAMA,KAAN,mBACC,sBAAMA,KAAN,0BACD,sBAAMA,KAAN,iBACA,sBAAMA,KAAN,uBACA,sBAAMA,KAAN,0BACA,sBAAMA,KAAN,6BACA,sBAAMA,KAAN,YACA,sBAAMA,KAAN,wB,4GCrGGoC,G,OAAU,SAACC,GAAD,MAAc,CACnCxI,KAAM,UACNwI,a,QCeFC,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjB,IAAMC,EAAUzI,KAAK0I,MACjBC,EAAU,GAERC,EAAgB,WAClBD,EAAU,IAGdZ,IACGc,WACAC,MACAC,MAAM,WACNC,GAAG,eAAe,SAASC,GAC1B,GAAGR,EAAUQ,EAASC,MAAT,WAA6B,CACxC,IAAIC,EAAM,GACVA,EAAIF,EAAS9G,KAAO8G,EAASC,MAC7BP,EAAQnF,KAAK2F,OAInB,IAAMC,EAAa,uCAAG,WAAMC,GAAN,yBAAAC,EAAA,6DAChBC,EAAS,GACTC,GAAU,IAAIxJ,MAAOyJ,UACrBtE,EAAOkE,EAAKlE,KACZuE,EAAmBvE,EAAO,IAAMqE,EAChCG,EAAa5B,IACd6B,UACAd,MACAC,MAAM,iBACLc,EAAmBF,EAAWZ,MAAMW,GATpB,SAUdG,EAAiBC,IAAIT,GAAM9B,KAA3B,sBAAgC,sBAAA+B,EAAA,6DACpCC,EAAOQ,UAAYL,EADiB,SAE9BG,EAAiBG,iBAAiBzC,MAAK,SAAShD,GACpDgF,EAAOhF,IAAMA,KAHqB,4CAVlB,gCAgBbgF,GAhBa,2CAAH,sDCzBXhK,E,IAAAA,SA6LOzB,EA3LD,SAAC0B,GAAW,IAAD,EACWzB,oBAAS,GADpB,mBAChBkM,EADgB,KACLC,EADK,OAESnM,mBAAS,IAFlB,mBAEhBoM,EAFgB,KAENC,EAFM,OAGDrM,mBAAS,IAHR,mBAGhBwG,EAHgB,KAGX8F,EAHW,OAIWtM,mBAAS,IAJpB,mBAIhBgM,EAJgB,KAILO,EAJK,OAKGvM,mBAAS,IALZ,mBAKhBgD,EALgB,KAKTwJ,EALS,OAMCxM,mBAAS,IANV,mBAMhByM,EANgB,KAMVC,EANU,OAOC1M,mBAAS,IAPV,mBAOhB2M,EAPgB,KAOVC,EAPU,OAQO5M,oBAAS,GARhB,mBAQhB6M,EARgB,KAQPC,EARO,KAWjBC,EAAWC,cAoCjB5M,qBAAU,WACR,IAAM6M,EAAa3M,OAAOG,SAASC,cAAc,SAC3CwM,EAAW5M,OAAOG,SAASC,cAAc,iBACzCyM,EAAO7M,OAAOG,SAASC,cAAc,cAE3CJ,OAAOG,SAASF,iBAAiB,UAAU,WACrCD,OAAOE,SAAW,MACpB2M,EAAKxM,UAAUE,OAAO,gBACtBP,OAAOG,SAASC,cAAc,eAAeC,UAAUE,OAAO,4BAC9DqM,EAASvM,UAAUE,OAAO,4BAC1BP,OAAOG,SAAS2M,cAAcC,OAC9BC,YAAW,WACTH,EAAKxM,UAAUE,OAAO,oBACrB,SAKPoM,EAAW1M,iBAAiB,SAAS,WACnC4M,EAAKxM,UAAUC,IAAI,kBACnB0M,YAAW,WACThN,OAAOG,SAASC,cAAc,eAAeC,UAAUC,IAAI,4BAC3DsM,EAASvM,UAAUC,IAAI,4BACvBuM,EAAKxM,UAAUC,IAAI,kBAClB,MAILsM,EAAS3M,iBAAiB,SAAS,WACjCD,OAAOG,SAASC,cAAc,eAAeC,UAAUE,OAAO,4BAC9DqM,EAASvM,UAAUE,OAAO,4BAC1BsM,EAAKxM,UAAUE,OAAO,gBACtByM,YAAW,WACTH,EAAKxM,UAAUE,OAAO,oBACrB,UAGJ,IAGH,IAAM0M,EAAY,uCAAG,WAAMC,GAAN,eAAAjC,EAAA,yDACM,cAArBiC,EAAKlC,KAAKmC,OADK,uBAEjBpB,EAAY,IACZF,GAAa,GAHI,6BAMM,SAArBqB,EAAKlC,KAAKmC,OANK,iCAODpC,EAAcmC,EAAKlC,KAAKoC,eAPvB,OAOb7L,EAPa,OAQjByK,EAAOzK,EAAI2E,KACX+F,EAAa1K,EAAImK,WAEjB2B,EAAUH,EAAKlC,KAAKoC,eAAe,SAAAtB,GACjCD,GAAa,GACbE,EAAYD,MAbG,4CAAH,sDA+BZuB,EAAY,SAAC9L,EAAKyE,GACtB,IAAMsH,EAAS,IAAIC,WACnBD,EAAOrN,iBAAiB,QAAQ,kBAAM+F,EAASsH,EAAOpC,WACtDoC,EAAOE,cAAcjM,IAGjBkM,GACJ,6BACE,uBAAMxM,KAAM2K,EAAY,UAAY,SACpC,yBAAKpL,UAAU,mBAAf,WAIJ,OACE,oCACE,yBAAKA,UAAU,cACf,yBAAKA,UAAU,kBACb,uBAAMkN,IAAI,sCACRvF,SAAUoE,GAEV,yBAAK/L,UAAU,WACb,uBAAGM,MAAO,CAAE6F,aAAc,IAA1B,yBACA,uBAAGnG,UAAU,eAAeM,MAAO,CAAE6M,YAAa,OAAQhH,aAAc,EAAGgB,MAAO,UAAlF,MAEF,uBAAS7G,MAAO,CAAEwC,OAAQ,mBAC1B,yBAAK9C,UAAU,QACb,uBAAQgC,KAAM,GAAIC,IAAI,2QACtB,kBAAC,EAAD,CACE9B,MAAO0L,EACP7L,UAAU,OACVC,YAAY,sFACZmE,SAAU,CAAEgJ,QAAS,EAAGC,QAAS,IACjC/M,MAAO,CAAEgN,YAAa,cAAe1K,SAAU,QAC/C0B,SAAU,SAACC,GAAD,OAAOuH,EAAQvH,EAAEC,OAAOrE,WAItC,yBAAKH,UAAU,cACb,yBAAKA,UAAU,YACb,uBACEsG,KAAK,SACLiH,SAAS,eACTvN,UAAU,kBACVwN,gBAAgB,EAChBpK,OAAO,mDACPqK,aAzDO,SAACjD,GACpB,IAAMkD,EAA2B,eAAdlD,EAAK/J,MAAuC,cAAd+J,EAAK/J,KACjDiN,GACH3F,EAAA,EAAQ4F,MAAM,qCAEhB,IAAMC,EAASpD,EAAKxI,KAAO,KAAO,KAAO,EAIzC,OAHK4L,GACH7F,EAAA,EAAQ4F,MAAM,gCAETD,GAAcE,GAiDTtJ,SAAUmI,GAETnB,EAAW,yBAAKrJ,IAAKqJ,EAAUtH,IAAI,SAAS1D,MAAO,CAAEC,MAAO,UAAe0M,IAE9E,yBAAKjN,UAAU,cACb,uBAAGM,MAAO,CAAE6F,aAAc,MAAO0H,MAAO,YAAxC,qFACA,uBAAO5N,YAAY,0BAAaqE,SAAU,SAACC,GAAD,OAAOmH,EAASnH,EAAEC,OAAOrE,QAAQA,MAAS+B,EAAOoE,KAAK,UAChG,uBAAOrG,YAAY,wBAAeqE,SAAU,SAACC,GAAD,OAAOqH,EAAQrH,EAAEC,OAAOrE,QAAQA,MAAOwL,EAAMrF,KAAK,YAI/F8E,GACC,uBAAQ3K,KAAK,UAAUH,MAAO,CAAEwN,QAAS,QAASvN,MAAO,QAAUsC,QAlK5D,WACnB,IAAMuJ,EAAW5M,OAAOG,SAASC,cAAc,iBAC/CoM,GAAW,GACXxD,IAAM,CACJ7C,OAAQ,OACRD,IAAK,+CACLlC,KAAM,CACJ0H,YACAW,OACAnG,MACAxD,QACAyJ,UAEDjD,MAAK,WACNF,IAAM,CACJ7C,OAAQ,MACRD,IAAK,iDAEJgD,MAAM,SAACpD,GACR2G,EAASjD,EAAQ1D,EAAI9B,OACrBwI,GAAW,GACXF,EAAQ,IACRM,EAAS2B,QACTxC,EAAY,IACZC,EAAO,IACPE,EAAS,IACTE,EAAQ,YAwIA,uB,uDC5JDoC,OA9Bf,SAAkBC,GAChB,mBAEE,WAAYtN,GAAQ,IAAD,8BACjB,6CAAMA,KACDuN,MAAQ,CACVrN,KAAM,MAHQ,EAFrB,kFASyB,IAAD,OACjB2H,IAAM,CACP7C,OAAQ,MACRD,IAAK,6CAEJgD,MAAK,SAACpD,GACL,EAAK6I,SAAS,CACZtN,KAAOyE,EAAI9B,YAhBrB,+BAuBI,OAAQ,kBAACyK,EAAD,iBAAsBG,KAAKzN,MAA3B,CAAkC0N,YAAaD,KAAKF,MAAMrN,YAvBtE,EAAM,CAAqByN,cCNhBxI,GAAW,SAACmD,GAAD,MAAc,CACpCxI,KAAM,WACNwI,YC0Ga+E,cA/Ef,SAAerN,GAAQ,IAAD,EAC4BzB,oBAAS,GADrC,mBACbqP,EADa,KACKC,EADL,KAEZH,EAAgB1N,EAAhB0N,YAFY,EAGYnP,mBAAS,IAHrB,mBAGbuP,EAHa,KAGHC,EAHG,KAKdC,EAAQC,aAAY,SAAAV,GAAK,OAAIA,EAAMW,eACnC5C,EAAWC,cAiDjB,OA/CA4C,aAAwB,WACtB,IAAIC,EAAYC,OAAO5G,OAAOuG,EAAMA,EAAMxK,OAAO,IAAI,GACrDqE,IAAM,CACJ7C,OAAQ,MACRD,IAAI,gDAAD,OAAkDqJ,EAASE,cAC7DvG,MAAK,SAACpD,GACPwE,EAAQ/G,KAAI,SAAAC,GACVsC,EAAI9B,KAAK0L,QAAQlM,MAEnBiJ,EAASnG,GAASR,EAAI9B,OACtBuG,UAIJzK,qBAAU,WACRkJ,IAAM,CACJ7C,OAAQ,MACRD,IAAK,iDAEJgD,MAAK,SAACpD,GACP2G,EAASjD,EAAQ1D,EAAI9B,OACrBkL,EAAYpJ,EAAI9B,WAEjB,IAyBD,oCACE,kBAAC,EAAD,CAAeiE,QAAS8G,EAAkB7G,SAAU,kBAAM8G,GAAoB,MAC9E,kBAAC,EAAD,MACA,yBAAKxO,UAAU,WACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,WACb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,UAhCV2O,GAAgBF,GACjB1L,KAAI,SAACC,EAAGC,GAClB,IAAI9C,EAAQ6O,OAAO5G,OAAOpF,GAAG,GACzBmM,EAAW,CACb/N,OAAQ,GACRC,SAAUlB,EAAMmG,MAElB,OAAO,kBAAC,EAAD,CAAMhD,IAAKL,EAChBlC,IAAKZ,EAAMiP,SACXvO,KAAMsO,EACNrO,UAAU,MACVE,QAASb,EAAM0L,KACf5K,SAAUd,EAAMkP,YAwBd,yBAAKrP,UAAU,SACb,kBAAC,EAAD,CAAOa,KAAMwN,Y","file":"static/js/5.5581d4dc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Input, Badge, Icon } from 'antd';\r\n\r\n\r\nimport './index.scss'\r\n\r\nconst { Search } = Input;\r\n\r\nfunction Index() {\r\n\r\n  const [ messageCount, setMessageCount ] = useState(0)\r\n  let heightChange = true\r\n  const loadNotify = () => {\r\n    setInterval(() => {\r\n      setMessageCount(messageCount => messageCount + 1)\r\n    }, 1000);\r\n  }\r\n  useEffect(() => {\r\n    loadNotify()\r\n\r\n    window.addEventListener('scroll', () => {\r\n        if(window.scrollY >= 50 && heightChange === true)\r\n        {\r\n          window.document.querySelector('.nav').classList.add('minimize')\r\n          window.document.querySelector('.inforForm').classList.add('fixedPos')\r\n          heightChange = false\r\n        }\r\n        if(window.scrollY <= 50 && heightChange === false) {\r\n          window.document.querySelector('.nav').classList.remove('minimize')\r\n          window.document.querySelector('.inforForm').classList.remove('fixedPos')\r\n          heightChange = true\r\n        }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className='nav'>\r\n      <div className='container'>\r\n        <div className='logo'></div>\r\n        <div className='searchBar'>\r\n          <Search\r\n            placeholder=\"input search text\"\r\n            onSearch={value => console.log(value)}\r\n            style={{ width: 200 }}\r\n          />\r\n        </div>\r\n        <div className='notify'>\r\n          <Badge count={0}>\r\n          <Icon type=\"usergroup-delete\" className='icon'/>\r\n          </Badge>\r\n          <Badge count={messageCount}>\r\n          <Icon type=\"mail\"  className='icon'/>\r\n          </Badge>\r\n          <Badge count={5}>\r\n          <Icon type=\"bell\" className='icon'/>\r\n          </Badge>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Index","import React, { useState, useRef } from 'react'\r\nimport { Avatar, Icon, Comment, Tooltip, Input, Button } from 'antd'\r\nimport moment from 'moment'\r\n\r\n// import css\r\nimport './index.scss'\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst Index = (props) => {\r\n\r\nconst { comments, user, likeCount, img, content, postTime } = props\r\nconst postDay2 = new Date(postTime)\r\nconst { avatar, username } = user\r\n  const [commentText, setCommentText] = useState('')\r\n  const [showComment, setShowComment] = useState(false)\r\n  const [showAllComment, setShowAllComment] = useState(false)\r\n  const [botText, setBotText] = useState(true)\r\n  const [commentData, setCommentData] = useState(comments ? comments : [])\r\n\r\n    const onChangeCommentHandler = (e) => {\r\n      setCommentText(e.target.value)\r\n    }\r\n\r\n    const postCommentHandler = () => {\r\n      let newComment = {\r\n        author: 'current user',\r\n        comment: commentText,\r\n        action: null,\r\n        likes: \"0\",\r\n        disLikes: \"0\"\r\n      }\r\n      commentData.push(newComment)\r\n      setCommentData([...commentData])\r\n      setCommentText('')\r\n      setShowComment(true)\r\n      setShowAllComment(true)\r\n      setBotText(false)\r\n    }\r\n\r\n  const renderComments = () => {\r\n    const like = (k) => {\r\n      let data = [...commentData]\r\n      let comment = data[k]\r\n      comment.likes = 1\r\n      comment.disLikes = 0\r\n      comment.action = 'liked'\r\n\r\n\r\n      data.splice(k, 1, comment)\r\n      setCommentData(data)\r\n    }\r\n\r\n    const dislike = (k) => {\r\n\r\n      let data = [...commentData]\r\n      let comment = data[k]\r\n      comment.likes = 0\r\n      comment.disLikes = 1\r\n      comment.action = 'disliked'\r\n\r\n\r\n      data.splice(k, 1, comment)\r\n      setCommentData(data)\r\n    }\r\n\r\n    return (\r\n      commentData.map((v, k) => {\r\n        let { likes, disLikes, action } = v\r\n        const actions = [\r\n          <span key=\"comment-basic-like\">\r\n            <Tooltip title=\"Like\">\r\n              <Icon\r\n                type=\"like\"\r\n                theme={action === 'liked' ? 'filled' : 'outlined'}\r\n                onClick={() => like(k)}\r\n              />\r\n            </Tooltip>\r\n            <span style={{ paddingLeft: 8, cursor: 'auto' }}>{likes}</span>\r\n          </span>,\r\n          <span key=' key=\"comment-basic-dislike\"'>\r\n            <Tooltip title=\"Dislike\">\r\n              <Icon\r\n                type=\"dislike\"\r\n                theme={action === 'disliked' ? 'filled' : 'outlined'}\r\n                onClick={() => { dislike(k) }}\r\n              />\r\n            </Tooltip>\r\n            <span style={{ paddingLeft: 8, cursor: 'auto' }}>{disLikes}</span>\r\n          </span>,\r\n          <span key=\"comment-basic-reply-to\">Reply to</span>,\r\n        ]\r\n        return (\r\n          <Comment\r\n            key={k}\r\n            actions={actions}\r\n            author={v.author}\r\n            avatar={\r\n              <Avatar\r\n                src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                alt=\"Han Solo\"\r\n              />\r\n            }\r\n            content={\r\n              <p>\r\n                {v.comment}\r\n              </p>\r\n            }\r\n            datetime={\r\n              <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\r\n                <span>{moment().fromNow()}</span>\r\n              </Tooltip>\r\n            }\r\n          />\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='postForm'>\r\n        <div className='header'>\r\n          <div className='avatar'>\r\n            <Avatar size={45} src={avatar}/>\r\n          </div>\r\n          <div className='username'>\r\n            <p ><i>{username}</i></p>\r\n            <div className='time'>\r\n                <a title={postTime}>{\r\n                moment([postDay2.getFullYear(), postDay2.getMonth(), postDay2.getDate(), postDay2.getHours(), postDay2.getMinutes(), postDay2.getSeconds(), postDay2.getMilliseconds()])\r\n                .fromNow()\r\n                }</a>\r\n          </div>\r\n          </div>\r\n          \r\n        </div>\r\n        <div className='body'>\r\n          <img src={img}></img>\r\n        </div>\r\n        <div className='likes'>\r\n          <Icon style={{ fontSize: '24px' }} type=\"like\" />\r\n          <Icon style={{ fontSize: '24px' }} type=\"heart\" />\r\n          <Icon style={{ fontSize: '24px' }} type=\"message\" onClick={() => { setShowComment(!showComment) }} />\r\n          <Icon style={{ fontSize: '24px' }} type=\"link\" />\r\n        </div>\r\n\r\n        <div className='likeCount'>\r\n          {likeCount} lượt thích\r\n        </div>\r\n\r\n        <div className='userContent'>\r\n          <p style={{margin: '0 5px 0 0'}}>{username}</p>\r\n          <p>{content}</p>\r\n        </div>\r\n\r\n        {\r\n          (showComment) && (\r\n            <div className='comments'>\r\n              {\r\n                (showAllComment) && (\r\n                  renderComments()\r\n                )\r\n              }\r\n              {\r\n                (!showAllComment && commentData.length > 0) && (\r\n\r\n                  <Comment\r\n\r\n                    author={<a>{commentData[0].author}</a>}\r\n                    avatar={\r\n                      <Avatar\r\n                        src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\r\n                        alt=\"Han Solo\"\r\n                      />\r\n                    }\r\n                    content={\r\n                      <p>\r\n                        {commentData[0].comment}\r\n                      </p>\r\n                    }\r\n                    datetime={\r\n                      <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\r\n                        <span>{moment().fromNow()}</span>\r\n                      </Tooltip>\r\n                    }\r\n                  />\r\n                )\r\n              }\r\n              <div className='seeAll'>\r\n                <a onClick={() => {\r\n                  setShowAllComment(!showAllComment)\r\n                  setBotText(!botText)\r\n                }\r\n                }>{botText === true ? 'See all comments' : 'See few comments'}</a>\r\n              </div>\r\n\r\n            </div>\r\n          )\r\n        }\r\n        <div className='postComment'>\r\n          <TextArea value={commentText} placeholder=\"Type comment here ...\" autoSize  style={{border: 'none'}} onChange={(e) => {onChangeCommentHandler(e)}}/>\r\n          <Button onClick={() => postCommentHandler()}>Đăng</Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index","import React, { useState, useEffect } from 'react'\r\nimport { List, Avatar, Button, Skeleton } from 'antd'\r\nimport reqwest from 'reqwest'\r\n// import css\r\nimport './index.scss'\r\n\r\n\r\n\r\n\r\nconst Index = () => {\r\n  const count = 8\r\n  const [initLoading, setInitLoading] = useState(true)\r\n  const [loading, setLoading] = useState(false)\r\n  const [data, setData] = useState([])\r\n  const [list, setList] = useState([])\r\n  const fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat&noinfo`\r\n\r\n  useEffect(() => {\r\n\r\n    getData(res => {\r\n      setInitLoading(false)\r\n      setData(res.results)\r\n      setList(res.results)\r\n    })\r\n\r\n  }, [])\r\n\r\n  const getData = callback => {\r\n    reqwest({\r\n      url: fakeDataUrl,\r\n      type: 'json',\r\n      method: 'get',\r\n      contentType: 'application/json',\r\n      success: res => {\r\n        callback(res)\r\n      },\r\n    })\r\n  }\r\n\r\n  const onLoadMore = () => {\r\n    setLoading(true)\r\n    setList(data.concat([...new Array(count)].map(() => ({ loading: true, name: {} }))))\r\n\r\n    getData(res => {\r\n      const dataNew = data.concat(res.results)\r\n      setData(dataNew)\r\n      setList(dataNew)\r\n      setLoading(false)\r\n    });\r\n  };\r\n\r\n  const loadMore =\r\n    !initLoading && !loading ? (\r\n      <div\r\n        style={{\r\n          textAlign: 'center',\r\n          marginTop: 12,\r\n          height: 32,\r\n          lineHeight: '32px',\r\n          marginBottom: '12px'\r\n        }}\r\n      >\r\n        <Button onClick={onLoadMore}>loading more</Button>\r\n      </div>\r\n    ) : null;\r\n\r\n  return (\r\n    <>\r\n<List\r\n        className=\"demo-loadmore-list\"\r\n        loading={initLoading}\r\n        itemLayout=\"horizontal\"\r\n        loadMore={loadMore}\r\n        dataSource={list}\r\n        renderItem={item => (\r\n          <List.Item>\r\n            <Skeleton avatar title={false} loading={item.loading} active>\r\n              <List.Item.Meta\r\n                avatar={\r\n                  <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\r\n                }\r\n                title={<a href=\"https://ant.design\">{item.name.last}</a>}\r\n                description=\"Ant Design\"\r\n              />\r\n            </Skeleton>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index","import React, { useEffect } from 'react'\r\nimport { Avatar } from 'antd'\r\n\r\nimport SuggestBooks from '../suggestBooks'\r\n// import css\r\nimport './index.scss'\r\n\r\n\r\n\r\nconst Index = (props) => {\r\n\r\n  const { user } = props\r\n\r\n  return (\r\n    <>\r\n      <div className='inforForm'>\r\n        <div className='user'>\r\n          <div className='avatar'>\r\n            <Avatar size={45}  src={user ? user.avatar ? user.avatar : '' : ''}/>\r\n          </div>\r\n          <div className='username'>\r\n            <h3><i>{user ? user.firstName ? user.firstName : '' : ''}</i></h3>\r\n          </div>\r\n        </div>\r\n        <div className='suggestBooks'>\r\n          <div className='top'>\r\n              Sách gợi ý cho bạn \r\n              <a style={{float: 'right', paddingRight: '20px'}}>Xem tất cả</a>\r\n          </div>\r\n          <div className='listBooks'>\r\n            <SuggestBooks /> \r\n          </div>\r\n        </div>\r\n        <div className='footer'>\r\n            <p>Design and Code by Ngo Thanh Tai and Vu Tan Dat</p>\r\n            <p>©2019 BookReview</p>\r\n          </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index","import React, { useRef, useState } from 'react'\r\nimport { Modal, Form, Input, Button, Spin } from 'antd'\r\nimport axios from 'axios'\r\n// import css\r\nimport '../firstRegister/style.scss'\r\n\r\nconst Index = (props) => {\r\n\r\n  const { getFieldDecorator } = props.form\r\n\r\n  const { visible, onCancel } = props\r\n\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const settingHandler = (e) => {\r\n    e.preventDefault()\r\n    props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const { firstName, lastName, gender, phone } = values\r\n        setLoading(true)\r\n        axios({\r\n          method: 'post',\r\n          url: 'http://localhost:8080/reviewbook/setting',\r\n          data: {\r\n            firstName,\r\n            secondName: lastName,\r\n            gender,\r\n            phone\r\n          }\r\n        }).then(() => {\r\n          setLoading(true)\r\n          onCancel()\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Spin spinning={loading}>\r\n        <Modal\r\n          visible={visible}\r\n          onCancel={() => { onCancel() }}\r\n          footer={null}\r\n          width='556px'\r\n          className='login-form-forgot'\r\n        >\r\n          <div className='title'>Your information for first login !</div>\r\n          <div className='text-1'>\r\n\r\n          </div>\r\n          <div className='text-2'>\r\n\r\n          </div>\r\n          <Form >\r\n            <Form.Item>\r\n              {getFieldDecorator('firstname', {\r\n                rules: [\r\n                  { required: true, message: 'Vui lòng nhập địa chỉ email' }\r\n                ]\r\n              })(<Input\r\n                placeholder='First Name'\r\n                \r\n                size='large'\r\n              />)}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator('lastname', {\r\n                rules: [\r\n                  { required: true, message: 'Vui lòng nhập địa chỉ email' }\r\n                ]\r\n              })(<Input\r\n                placeholder='Last Name'\r\n                \r\n                size='large'\r\n              />)}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator('gender', {\r\n                rules: [\r\n                  { required: true, message: 'Vui lòng nhập địa chỉ email' }\r\n                ]\r\n              })(<Input\r\n                placeholder='Gender'\r\n                \r\n                size='large'\r\n              />)}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator('phone', {\r\n                rules: [\r\n                  { required: true, message: 'Vui lòng nhập địa chỉ email' }\r\n                ]\r\n              })(<Input\r\n                placeholder='Phone'\r\n               \r\n                size='large'\r\n              />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                name='btn-send-request'\r\n                type='primary'\r\n                size='large'\r\n                block\r\n                className='btn-innos'\r\n                onClick={(e) => settingHandler(e)}\r\n              >\r\n                Done\r\n            </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </Spin>\r\n    </>\r\n  )\r\n}\r\n\r\nconst WrappedNormalForm = Form.create({ name: 'form' })(Index)\r\nexport default WrappedNormalForm","import React from 'react'\r\n\r\nimport { Menu, Icon, Switch } from 'antd';\r\n\r\n\r\n// import css\r\nimport './index.scss'\r\n\r\n\r\nconst Index = () => {\r\n  const { SubMenu } = Menu\r\n\r\n\r\n  return <>\r\n    <div className='bar'>\r\n      <Menu\r\n        style={{ width: 256 }}\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode={'vertical'}\r\n        theme={'light'}\r\n      >\r\n        <SubMenu\r\n          \r\n          title={\r\n            <span>\r\n              <Icon type=\"book\" />\r\n              <span>Sách tiếng việt</span>\r\n            </span>\r\n          }\r\n        >\r\n\r\n          <Menu.Item >Sách Mới</Menu.Item>\r\n          <Menu.Item >Sách Bán Chạy</Menu.Item>\r\n          <Menu.Item >Sách Thiếu Nhi</Menu.Item>\r\n          <Menu.Item >Sách Văn Học</Menu.Item>\r\n          <Menu.Item >Sách Kinh Tế</Menu.Item>\r\n          <Menu.Item >Sách Kỹ Năng</Menu.Item>\r\n          {/* <SubMenu key=\"sub3\" title=\"Submenu\">\r\n            <Menu.Item key=\"7\">Option 7</Menu.Item>\r\n            <Menu.Item key=\"8\">Option 8</Menu.Item>\r\n          </SubMenu> */}\r\n        </SubMenu>\r\n\r\n        <SubMenu\r\n          \r\n          title={\r\n            <span>\r\n              <Icon type=\"book\" />\r\n              <span>Sách nước ngoài</span>\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item >Best Seller</Menu.Item>\r\n          <Menu.Item >New Arrival</Menu.Item>\r\n          <Menu.Item >Children's Books</Menu.Item>\r\n          <Menu.Item >Fiction - Literature</Menu.Item>\r\n          <Menu.Item >Business & Economics</Menu.Item>\r\n          <Menu.Item >Self Help</Menu.Item>\r\n          <Menu.Item >Education - Teaching</Menu.Item>\r\n        </SubMenu>\r\n\r\n        <SubMenu\r\n\r\n          title={\r\n            <span>\r\n              <Icon type=\"book\" />\r\n              <span>Sách bạn nên đọc</span>\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item >Người nổi tiếng đọc gì</Menu.Item>\r\n          <Menu.Item >Hành trình làm mẹ</Menu.Item>\r\n          <Menu.Item >Sách bán chạy trong năm</Menu.Item>\r\n          <Menu.Item >Câu lạc bộ Harry Potter</Menu.Item>\r\n          <Menu.Item >Must-read</Menu.Item>\r\n          <Menu.Item >Books into Movies</Menu.Item>\r\n\r\n        </SubMenu>\r\n\r\n        <SubMenu\r\n\r\n          title={\r\n            <span>\r\n              <Icon type=\"appstore\" />\r\n              <span>Công ty phát hành</span>\r\n            </span>\r\n          }\r\n        >\r\n           <Menu.Item >NXB Trẻ</Menu.Item>\r\n          <Menu.Item >NXB Kim Đồng</Menu.Item>\r\n          <Menu.Item >Nhã Nam</Menu.Item>\r\n          <Menu.Item >Alphabooks</Menu.Item>\r\n          <Menu.Item >AZ Việt Nam</Menu.Item>\r\n          <Menu.Item >First News</Menu.Item>\r\n           <Menu.Item >Đinh Tị</Menu.Item>\r\n          <Menu.Item >MC Books</Menu.Item>\r\n          <Menu.Item >Đông A</Menu.Item>\r\n          <Menu.Item >Bách Việt</Menu.Item>\r\n          <Menu.Item >Phương Nam</Menu.Item>\r\n          <Menu.Item >IPM</Menu.Item>\r\n          <Menu.Item >Minh Long</Menu.Item>\r\n\r\n\r\n        </SubMenu>\r\n      </Menu>\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default Index","export const setPost = (payload) => ({\r\n  type: 'setPost',\r\n  payload\r\n})\r\n","import firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\nimport { setPost } from '../actions/posts/setPost'\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAxsPNM6aufE4GYrx4Ia4C8GrzI4mAPX9g\",\r\n  authDomain: \"reviewbook-1af0f.firebaseapp.com\",\r\n  databaseURL: \"https://reviewbook-1af0f.firebaseio.com\",\r\n  projectId: \"reviewbook-1af0f\",\r\n  storageBucket: \"reviewbook-1af0f.appspot.com\",\r\n  messagingSenderId: \"357029016894\",\r\n  appId: \"1:357029016894:web:95d3d1711b442cbfc5286f\",\r\n  measurementId: \"G-GP50EN1R49\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst dateNow = Date.now();\r\nvar postNew = []; \r\n\r\nconst removeNewPost = () => {\r\n    postNew = []\r\n}\r\n\r\nfirebase\r\n  .database()\r\n  .ref()\r\n  .child(\"Reviews\")\r\n  .on(\"child_added\", function(snapshot) {\r\n    if(dateNow < snapshot.val()['numberTime']){\r\n      var obj = {};\r\n      obj[snapshot.key] = snapshot.val();\r\n      postNew.push(obj);\r\n    }\r\n  });\r\n\r\nconst uploadStorage = async file => {\r\n  var result = {};\r\n  var dataStr = new Date().getTime();\r\n  var name = file.name;\r\n  var fileCompleteName = name + \"_\" + dataStr;\r\n  var storageRef = firebase\r\n    .storage()\r\n    .ref()\r\n    .child(\"Review Images\");\r\n  var reviewStorageRef = storageRef.child(fileCompleteName);\r\n  await reviewStorageRef.put(file).then(async function() {\r\n    result.nameImage = fileCompleteName;\r\n    await reviewStorageRef.getDownloadURL().then(function(url) {\r\n      result.url = url;\r\n    });\r\n  });\r\n  return result;\r\n};\r\n\r\nexport { uploadStorage,postNew, removeNewPost };\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Button, Divider, Avatar, Input, Upload, Icon, message, Spin } from 'antd'\r\n// import css\r\nimport './index.scss'\r\n//import firebase\r\nimport { uploadStorage } from '../../firebase/my-firebase'\r\nimport axios from 'axios'\r\n\r\n//redux\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setPost } from '../../actions/posts/setPost'\r\n\r\n\r\nconst { TextArea } = Input\r\n\r\nconst Index = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [imageUrl, setImageUrl] = useState('')\r\n  const [url, setUrl] = useState('')\r\n  const [nameImage, setNameImage] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [kind, setKind] = useState('')\r\n  const [desc, setDesc] = useState('')\r\n  const [posting, setPosting] = useState(false)\r\n\r\n  //redux\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const onSubmitPost = () => {\r\n    const closeBtn = window.document.querySelector('.close-button')\r\n    setPosting(true)\r\n    axios({\r\n      method: 'post',\r\n      url: 'http://localhost:8080/reviewbook/review/post',\r\n      data: {\r\n        nameImage,\r\n        desc,\r\n        url,\r\n        title,\r\n        kind\r\n      }\r\n    }).then(() => {\r\n      axios({\r\n        method: 'get',\r\n        url: 'http://localhost:8080/reviewbook/review/post',\r\n\r\n      }).then( (res) => {\r\n        dispatch(setPost(res.data))\r\n        setPosting(false)\r\n        setDesc('')\r\n        closeBtn.click()\r\n        setImageUrl('')\r\n        setUrl('')\r\n        setTitle('')\r\n        setKind('')\r\n      })\r\n\r\n    })\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const postEditor = window.document.querySelector('.text')\r\n    const closeBtn = window.document.querySelector('.close-button')\r\n    const body = window.document.querySelector('.body-fake')\r\n\r\n    window.document.addEventListener('scroll', () => {\r\n      if (window.scrollY >= 350) {\r\n        body.classList.remove('modal-active')\r\n        window.document.querySelector('.bottom-bar').classList.remove('show-from-post-component')\r\n        closeBtn.classList.remove('show-from-post-component')\r\n        window.document.activeElement.blur()\r\n        setTimeout(() => {\r\n          body.classList.remove('show-fake-body')\r\n        }, 300);\r\n      }\r\n\r\n    })\r\n\r\n    postEditor.addEventListener('focus', () => {\r\n      body.classList.add('show-fake-body')\r\n      setTimeout(() => {\r\n        window.document.querySelector('.bottom-bar').classList.add('show-from-post-component')\r\n        closeBtn.classList.add('show-from-post-component')\r\n        body.classList.add('modal-active')\r\n      }, 0);\r\n\r\n\r\n    })\r\n    closeBtn.addEventListener('click', () => {\r\n      window.document.querySelector('.bottom-bar').classList.remove('show-from-post-component')\r\n      closeBtn.classList.remove('show-from-post-component')\r\n      body.classList.remove('modal-active')\r\n      setTimeout(() => {\r\n        body.classList.remove('show-fake-body')\r\n      }, 300);\r\n    }\r\n    )\r\n  }, [])\r\n\r\n\r\n  const handleChange = async info => {\r\n    if (info.file.status === 'uploading') {\r\n      setImageUrl('')\r\n      setIsLoading(true)\r\n      return\r\n    }\r\n    if (info.file.status === 'done') {\r\n      let img = await uploadStorage(info.file.originFileObj)\r\n      setUrl(img.url)\r\n      setNameImage(img.nameImage)\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, imageUrl => {\r\n        setIsLoading(false)\r\n        setImageUrl(imageUrl)\r\n      }\r\n      )\r\n    }\r\n  }\r\n\r\n  const beforeUpload = (file) => {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!')\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!')\r\n    }\r\n    return isJpgOrPng && isLt2M\r\n  }\r\n\r\n  const getBase64 = (img, callback) => {\r\n    const reader = new FileReader()\r\n    reader.addEventListener('load', () => callback(reader.result))\r\n    reader.readAsDataURL(img)\r\n  }\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      <Icon type={isLoading ? 'loading' : 'plus'} />\r\n      <div className=\"ant-upload-text\">Upload</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className='body-fake'></div>\r\n      <div className='createPostForm'>\r\n        <Spin tip=\"Đang đăng bài ...\"\r\n          spinning={posting}\r\n        >\r\n          <div className='top-bar'>\r\n            <p style={{ marginBottom: 0 }}>Đăng bài</p>\r\n            <a className='close-button' style={{ marginRight: 'auto', marginBottom: 0, float: 'right' }}>x</a>\r\n          </div>\r\n          <Divider style={{ margin: '10px 0 20px 0' }} />\r\n          <div className='main'>\r\n            <Avatar size={45} src='https://scontent.fsgn5-5.fna.fbcdn.net/v/t1.0-9/p720x720/60729624_1644917328985948_4362762753471938560_o.jpg?_nc_cat=100&_nc_ohc=_iULebdWibwAQmWeGhWMtAlJf4I4rF1MuehfEw2ervkmfYQl9Jj1C_8rA&_nc_ht=scontent.fsgn5-5.fna&oh=d36be4e73e04d17136dc1c843b6f0cea&oe=5E8422FD' />\r\n            <TextArea\r\n              value={desc}\r\n              className='text'\r\n              placeholder=\"Bạn có đang muốn chia sẻ cuốn sách nào không ?\"\r\n              autoSize={{ minRows: 1, maxRows: 50 }}\r\n              style={{ borderColor: 'transparent', fontSize: '18px' }}\r\n              onChange={(e) => setDesc(e.target.value)}\r\n            />\r\n          </div>\r\n          {/* <Divider style={{marginBottom: '15px'}}/> */}\r\n          <div className='bottom-bar'>\r\n            <div className='tool-bar'>\r\n              <Upload\r\n                name=\"avatar\"\r\n                listType=\"picture-card\"\r\n                className=\"avatar-uploader\"\r\n                showUploadList={false}\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                beforeUpload={beforeUpload}\r\n                onChange={handleChange}\r\n              >\r\n                {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n              </Upload>\r\n              <div className='input-form'>\r\n                <p style={{ marginBottom: '5px', color: '#B8BCBC' }}>Dòng này được thêm vào cho đỡ trống ...</p>\r\n                <Input placeholder='Tiêu đề...' onChange={(e) => setTitle(e.target.value)} value = {title} name='title' />\r\n                <Input placeholder='Thể loại...'  onChange={(e) => setKind(e.target.value)} value={kind} name='kind' />\r\n              </div>\r\n            </div>\r\n            {\r\n              !isLoading && (\r\n                <Button type='primary' style={{ display: 'block', width: '100%' }} onClick={onSubmitPost}>Đăng</Button>\r\n              )\r\n            }\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nfunction withAuth(WrappedComponent) {\r\n  return class index extends Component {\r\n\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n         user: null\r\n      }\r\n    }\r\n\r\n      componentDidMount() {\r\n         axios({\r\n        method: 'get',\r\n        url: 'http://localhost:8080/reviewbook/current',\r\n  \r\n      }).then((res) => {\r\n          this.setState({\r\n            user : res.data\r\n          })\r\n      })\r\n    }\r\n  \r\n    render() {\r\n\r\n      return  <WrappedComponent {...this.props} currentUser={this.state.user}/>\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default withAuth\r\n\r\n","export const loadMore = (payload) => ({\r\n  type: 'loadMore',\r\n  payload\r\n})\r\n","import React, { useState, useEffect } from 'react'\r\nimport NavBar from '../../components/nav'\r\nimport { Divider } from 'antd'\r\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener'\r\n//import components\r\nimport Post from '../../components/post'\r\nimport Infor from '../../components/infor'\r\nimport FirstRegister from '../../components/firstRegister'\r\nimport LeftBar from '../../components/leftBar'\r\nimport CreatePost from '../../components/createPost'\r\nimport axios from 'axios'\r\n\r\n// import css\r\nimport './index.scss'\r\n\r\n//import HOC\r\nimport withAuth from '../../components/utils/hoc/authUser'\r\n\r\n//import redux\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setPost } from '../../actions/posts/setPost'\r\n\r\nimport firebase from \"firebase\";\r\nimport { loadMore } from '../../actions/posts/loadMore'\r\nimport { postNew, removeNewPost } from '../../firebase/my-firebase'\r\n\r\n\r\n\r\n\r\nfunction Index(props) {\r\n  const [visibleFirstTime, setVisibleFirstTime] = useState(false)\r\n  const { currentUser } = props\r\n  const [postList, setPostList] = useState([])\r\n  //redux\r\n  const posts = useSelector(state => state.postReducer)\r\n  const dispatch = useDispatch()\r\n\r\n  useBottomScrollListener(() => {\r\n    let lastPost =  Object.values(posts[posts.length-1])[0]\r\n    axios({\r\n      method: 'get',\r\n      url: `http://localhost:8080/reviewbook/review/post/${lastPost.numberTime}`,\r\n    }).then((res) => {\r\n      postNew.map(v => {\r\n        res.data.unshift(v)\r\n      })\r\n      dispatch(loadMore(res.data))\r\n      removeNewPost()\r\n    })\r\n  })\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'get',\r\n      url: 'http://localhost:8080/reviewbook/review/post',\r\n\r\n    }).then((res) => {\r\n      dispatch(setPost(res.data))\r\n      setPostList(res.data)\r\n    })\r\n  }, [])\r\n\r\n  const loadPosts = () => {\r\n    const list = posts ? posts : postList\r\n    return list.map((v, k) => {\r\n      let value = Object.values(v)[0]\r\n      let postUser = {\r\n        avatar: '',\r\n        username: value.name\r\n      }\r\n      return <Post key={k}\r\n        img={value.urlImage}\r\n        user={postUser}\r\n        likeCount='123'\r\n        content={value.desc}\r\n        postTime={value.time}\r\n      />\r\n    })\r\n  }\r\n\r\n  // firebase.database().ref().child(\"Reviews\").on('child_added', function (snapshot) {\r\n\r\n  // })\r\n\r\n  return (\r\n    <>\r\n      <FirstRegister visible={visibleFirstTime} onCancel={() => setVisibleFirstTime(false)} />\r\n      <NavBar />\r\n      <div className='content'>\r\n        <div className='leftBar'>\r\n          <LeftBar />\r\n        </div>\r\n        <div className='wrapper'>\r\n          <div className='center-content'>\r\n            <CreatePost />\r\n            <div className='posts'>\r\n              {loadPosts()}\r\n            </div>\r\n          </div>\r\n          <div className='infor'>\r\n            <Infor user={currentUser} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withAuth(Index)"],"sourceRoot":""}